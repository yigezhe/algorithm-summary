我现在能想到的有三种，
第一种是直接找到最小的，把当前的与最小的交换,（实现了）
第二种也是找最小的，只不过是边找边换！(实现了）（这就是冒泡排序）
第三种就是用二分法查找(这个还需要找思路,现阶段不用实现了！还是要关注主要工作，自己不要分叉太多！)
现在的工作，我根据每一种想法，我都去实现代码，并且测试成功．之后找到了相同想法的代码之后，可以学习对方的编程技巧，以及代码组织！
这里可以不去查找别人的代码，直接把我的代码用在我的程序中，知道得到正确的结果便可以！


原地排序有：希尔排序，冒泡排序，插入排序，选择排序，堆排序
快速排序
各种排序算法的关系
快速排序是对冒泡排序的一种改进．
可能快速排序不是一种原地排序，
原地排序的要求只有一个，就是对相同元素不要改变其位置？
快速排序就会改变相同元素的位置？

我想知道ｃ＋＋中的ｓｏｒｔ函数是如何实现的，
introsort的实现：

1. 快排。
2. 递归深度过深时切成堆排（防爆栈和O[n^2]）。
3. partition小于一定阈值时切成插入排序（更快）。

实现方式还比较复杂，而且是根据数组大小和特点选择排序算法
利用这个机会，我想把各种排序算法全面学习一下
掌握尽可能多的排序算法，在去进展接下来的挑战编程问题，这样我以后写程序，想用什么排序算法就用什么排序算法，不必因为自己只懂一个，而只用那一个！

我现在想搜索引擎，应该先用查找算法，找到想要的，再用排序算法，依据重要性进行排列！

排序算法学习的次序依次是
任何算法都值得学习，重要的是其实现的便捷性，以及对思维的训练！
冒泡排序算法 (我需要看看各种排序算法如何改进，学习改进中的思路与想法！）
鸡尾酒排序算法(冒泡排序算法的改进）
快速排序算法(冒泡排序算法的改进）

插入排序！
